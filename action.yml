# action.yml
name: MIE LaunchPad
description: Manage Proxmox MIE Containers for your Repository.
author: maxklema
branding:
  icon: 'package'
  color: 'purple'

inputs:
  github_event_name:
    description: 'GitHub Event Name (create, push, delete)'
    required: true
  github_repository:
    description: 'GitHub Repository (owner/repo)'
    required: true
  github_repository_owner:
    description: 'GitHub Repository Owner'
    required: true
  github_ref_name:
    description: 'GitHub Ref Name (Branch Name)'
    required: true
  proxmox_username:
    description: 'Username for your MIE Proxmox Account'
    required: true
  proxmox_password:
    description: 'Password for your MIE Proxmox Account'
    required: true
  container_password:
    description: 'Password for your LXC Container'
    required: true
  public_key:
    description: 'Public Key to be stored in your LXC Container'
    required: false
  http_port:
    description: 'HTTP port your project will listen on.'
    required: true
  deploy_on_start:
    description: 'Automatically deploy your project'
    required: false
  project_repository:
    description: 'Link to your project repository'
    required: false
  project_root:
    description: 'Root directory of project to deploy from'
    required: false
  require_env_vars:
    description: 'Dictates if project requires environment variables'
    required: false
  container_env_vars:
    description: 'Dictionary of key/value environment variable pairs'
    required: false
  install_command:
    description: 'Command to install dependencies'
    required: false
  build_command:
    description: 'Command to build project'
    required: false
  start_command:
    description: 'Command to start project'
    required: false
  runtime_language:
    description: 'underlying runtime environment'
    required: false
  require_services:
    description: 'Dictates if proejct requires special services'
    required: false
  services:
    description: 'Array of valid services to install on container that are listed on the master service list.'
    required: false
  custom_services:
    description: '2D Array of custom services and installation commands that are not listed in the master service list'
    required: false

outputs:
  CONTAINER_CREATED:
    value: ${{ steps.create-lxc.outputs.CONTAINER_CREATED }}

runs:
  using: "composite"
  steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Container Creation for Branch (If Needed)
      id: create-lxc
      shell: bash
      env:
        GITHUB_EVENT: ${{ inputs.github_event_name }}
        CONTAINER_NAME: ${{ inputs.github_repository }}-${{ inputs.github_repository_owner }}-${{ inputs.github_ref_name }}
        CONTAINER_PASSWORD: ${{ inputs.container_password }}
        PROXMOX_USERNAME: ${{ inputs.proxmox_username }}
        PROXMOX_PASSWORD: ${{ inputs.proxmox_password }}
        PUBLIC_KEY: ${{ inputs.public_key }}
        HTTP_PORT: ${{ inputs.http_port }}
        DEPLOY_ON_START: ${{ inputs.deploy_on_start }}
        PROJECT_REPOSITORY: ${{ inputs.project_repository }}
        PROJECT_BRANCH: ${{ inputs.github_ref_name }}
        PROJECT_ROOT: ${{ inputs.project_root }}
        REQUIRE_ENV_VARS: ${{ inputs.require_env_vars }}
        CONTAINER_ENV_VARS: ${{ inputs.container_env_vars }}
        INSTALL_COMMAND: ${{ inputs.install_command }}
        START_COMMAND: ${{ inputs.start_command }}
        BUILD_COMMAND:  ${{ inputs.build_command }}
        RUNTIME_LANGUAGE: ${{ inputs.runtime_language }}
        REQUIRE_SERVICES: ${{ inputs.require_services }}
        SERVICES: ${{ inputs.services }}
        CUSTOM_SERVICES: ${{ inputs.custom_services }}
      if: ${{ inputs.github_event_name == 'create' || inputs.github_event_name == 'push' }}
      run: |

        set +e
        ssh -i ~/.ssh/id_rsa -o SendEnv="PROXMOX_USERNAME PROXMOX_PASSWORD CONTAINER_NAME" container-exists@10.15.0.4
        CONTAINER_EXISTS=$?
        if [ $CONTAINER_EXISTS -eq 0 ] || [ $CONTAINER_EXISTS -eq 2 ] ; then
            echo "Container \"$CONTAINER_NAME\" already found with this name. Cannot create container on this branch."
            if [ ! $GITHUB_EVENT == 'push' ]; then
                exit 1
            fi
        elif [ $CONTAINER_EXISTS -eq 1 ]; then
            echo "Container \"$CONTAINER_NAME\" Not Found. Creating Container based on $PROJECT_BRANCH branch."
            
            # continue if an exit code error in remote container creation script
            set +e

            ssh -i ~/.ssh/id_rsa \
            -o SendEnv="CONTAINER_NAME CONTAINER_PASSWORD PROXMOX_USERNAME PROXMOX_PASSWORD HTTP_PORT DEPLOY_ON_START PROJECT_REPOSITORY PROJECT_BRANCH PROJECT_ROOT REQUIRE_ENV_VARS CONTAINER_ENV_VARS INSTALL_COMMAND START_COMMAND RUNTIME_LANGUAGE REQUIRE_SERVICES SERVICES CUSTOM_SERVICES" \
            create-container@10.15.0.4 
            
            echo "CONTAINER_CREATED=true" >> $GITHUB_OUTPUT
            exit $?
        fi

    - name: Container Update on Branch Push
      shell: bash
      if: ${{ inputs.github_event_name == 'push' }} && steps.create-lxc.outputs.CONTAINER_CREATED != 'true'
      run: |
        ssh -i ~/.ssh/id_rsa \
          -o SendEnv="CONTAINER_NAME PROXMOX_USERNAME PROXMOX_PASSWORD PROJECT_REPOSITORY PROJECT_BRANCH PROJECT_ROOT INSTALL_COMMAND START_COMMAND BUILD_COMMAND RUNTIME_LANGUAGE" \
          update-container@10.15.0.4
        exit $?

    - name: Container Deletion on Branch Deletion (Check)
      shell: bash
      if: ${{ inputs.github_event_name == 'delete' }}
      run: |
        ssh -i ~/.ssh/id_rsa \
          -o SendEnv="PROXMOX_USERNAME PROXMOX_PASSWORD CONTAINER_NAME" delete-container@10.15.0.4
        exit $?
